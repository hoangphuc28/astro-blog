---
export interface Props {
  title: string;
}
import "../styles/global.css";
const { title } = Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Personal portfolio and blog" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <title>{title}</title>
  </head>
  <body>
    <slot />
    <script>
      // Intersection Observer for scroll animations
      const observerOptions = {
        threshold: 0.1,
        rootMargin: "0px 0px -50px 0px",
      };

      const observer = new IntersectionObserver((entries) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            entry.target.classList.add("animate");
          }
        });
      }, observerOptions);

      // Observe elements for animation
      document.addEventListener("DOMContentLoaded", () => {
        const elementsToAnimate = document.querySelectorAll(
          ".section-title, .about-content, .blog-intro, .article-card, .load-more, .article-content"
        );

        elementsToAnimate.forEach((el) => {
          observer.observe(el);
        });
      });

      // Smooth scrolling for navigation links
      document.querySelectorAll('a[href^="#"]').forEach((anchor) => {
        anchor.addEventListener("click", (e) => {
          e.preventDefault();
          const href = (anchor as HTMLAnchorElement).getAttribute("href");
          const target = document.querySelector(href!);
          if (target) {
            target.scrollIntoView({
              behavior: "smooth",
              block: "start",
            });
          }
        });
      });

      // Add parallax effect to hero section
      window.addEventListener("scroll", () => {
        const scrolled = window.pageYOffset;
        const hero = document.querySelector(".hero") as HTMLElement | null;
        if (hero) {
          hero.style.transform = `translateY(${scrolled * 0.5}px)`;
        }
      });

      document.addEventListener("DOMContentLoaded", () => {
        const currentPath = window.location.pathname;
        const navLinks = document.querySelectorAll(".nav-links a");

        navLinks.forEach((link) => {
          const linkPath = link.getAttribute("href");
          if(linkPath)
            if (
            currentPath === linkPath ||
            (linkPath !== "/" && currentPath.startsWith(linkPath))
          ) {
            link.classList.add("active");
          }
        });
      });
    </script>
  </body>
</html>
